1、嵌入式系统组成：由硬件层、中间层、系统软件层和应用层组成。

1.1、硬件层：包括嵌入式微处理器、存储器（SDRAM、ROM、Flash等）、通用设备接口和IO接口（A/D、D/A、I/O等）
             在嵌入式微处理器基础上添加电源、时钟、存储器，就构成一个嵌入式的核心控制模块。操作系统和
			 应用程序都可以固化在ROM中。
			 
1.1.1、嵌入式微处理器：嵌入式硬件的核心。可以理解成定制和裁剪化的CPU，具有很高的效率和可靠性。
	   嵌入式微处理器体系结构：冯诺依曼和哈佛结构。指令系统可选用：精简指令集（RISC）和复杂指令集（CISC）。
	   RISC:计算机在通道中只包含最有用的指令，确保数据通道快速执行每一条指令，提高效率并简化CPU硬件设计。
	   CISC:计算机具有大量的指令和寻址方式，但大多数程序只使用少量指令就能运行。
			
1.1.2、存储器：嵌入式系统需要存储器来存放和执行代码。嵌入式系统的存储器包含Cache、主存和辅助存贮器。
	   Cache:容量小、速度快，在主存和微处理器内核之间，存放的是最近一段时间微处理器使用最多的程序和
			 代码。微处理器在进行数据交互时先从Cache中读取，提高效率。在嵌入式系统中Cache全部集成在
			 嵌入式微处理器内，可分为数据Cache、指令Cache和混合Cache。Cache根据处理器不同而大小不一样。
			 Cache中的数据掉电不保存。
	   主存：也就是常说的内存，他是微处理器能直接访问的寄存器，用来存放系统和用户的程序及数据，可以在
			 微处理器内部或外部（256KB~1GB），一般片内的容量小，速度快，片外反之。
			 常用的主存的存储器有：ROM类  NOR Flash（可多次擦写、存储快、容量大）、EPROM和PROM。
			                       只可读不可写，掉电保存（类似计算启动是的BIOS）。
			                       RAM类  SRAM、DRAM和SDRAM。可读可写，掉电不保存。
	   辅助存储：常说的硬盘。用来存放大数据量的程序代码和信息，容量大、速度慢，用来长期保存。
	   
	   大致来说数据是通过内存（主存）-Cache-寄存器-微处理器，Cache缓存则是为了弥补微处理器与内存之间
	   运算速度的差异而设置的的部件。
	   
1.1.3、通用设备和IO口：系统与外界交互的接口（A/D、D/A、I/O、以太网、USB、音频接口、VGA、IIC、SPI、红外接口等）

1.2、中间层：硬件层和软件层之间的为中间层，也称为硬件抽象层（HAL）或板级支持包（BSP），将系统应用程序和硬件分离，
			 应用程序开发人员无需关心地层硬件。该层包含了大部分与硬件相关的软件模块和设备驱动。
			 特点：
			 硬件相关性：BSP需要为操作系统提供和控制具体硬件的方法。
			 软件相关性：不同的操作系统具有各自的软件层次，因此不同的操作系统具有特定的硬件接口形式。
			
1.2.1、嵌入式系统初始化：按照自底向上、从硬件到软件的次序为：片级初始化、板级初始化和系统初始化。
						 片及初始化：微处理器核心寄存器和控制器、核心工作模式和微处理器的局部总线模式等（纯硬件过程）。
						 板级初始化：处理器以外的硬件初始化，为之后的系统初始化和应用程序初始化准备（软硬结合的过程）。
						 系统初始化：进行操作系统的初始化，BSP将处理器的控制权交给操作系统。由操作系统完成与硬件无关的
						             设备驱动程序，建立系统内存，加载并初始化其他系统软件模块。

1.2.2、硬件相关的设备驱动程序：BSP的另一个主要的功能是硬件相关的设备驱动。硬件相关的设备驱动程序的初始化通常是一个从高
								到低的过程，尽管BSP中包含硬件相关的设备驱动，但是这些设备驱动程序不直接由BSP使用，而是
								在系统初始化过程中由BSP将他们与操作系统中的通用的设备驱动关联起来，并在随后的应用中由
								设备驱动程序调用，实现对硬件设备操作。

1.3、系统软件层：系统软件层由实时多任务操作系统（RTOS）、文件系统、图形用户接口（GUI）、网络系统以及通用组件模块组成。
				 RTOS是嵌入式应用软件的基础和开发平台。
				 
1.3.1、嵌入式操作系统：（EOS）负责嵌入式系统的全部软件、硬件资源的分配、任务调度，控制、协调并发活动。他具备一般操作
						系统最基本的功能，如任务调度、同步机制、中断处理、文件处理等外，他还有以下特点：
						可裁剪性，支持开放性和可伸缩性的体系结构。
						强实时性，EOS实时性一般较强，可用于各种设备控制中。
						统一接口，提供设备统一的驱动接口。
						操作简单、方便、提供友好的图形GUI和图形界面，最求者易学。
						提供强大的网络功能，支持TCP/IP协议以及其他的协议，提供TCP/UDP/IP/PPP协议支持及统一的MAC访问接口
						强稳定性，弱交互性。 嵌入式一旦运行就不需要用户过多的干预，这就要负责系统管理的EOS具有较强的稳定
						性，嵌入式操作系统的用户接口一般不提供操作命令。
						固话代码，嵌入式操作系统和应用软件被固化在嵌入式系统计算机的ROM中。
						更好的硬件适应性，也就是良好的移植性。

1.3.2、文件系统：通过操作系统的文件系统通常具有以下功能：
				 提供用户对文件操作的命令。
				 提供用户共享文件的机制，
				 管理文件的存储介质。
				 提供文件的存取控制机制，保障文件及文件系统的安全性，
				 提供文件及文件系统的备份和恢复功能，
				 提供对文件的加密和解密功能。
				 
				 嵌入式文件系统比较简单，主要提供文件存储、检索和更新等功能，一般不提供保护和加密等安全机制。主要有以下操作
				 设置、修改对文件和目录的存取权限。
				 提供建立、修改、改变和删除目录等服务。
				 提供创建、打开、读写、关闭和撤销文件等服务。
				 
				 嵌入式文件系统的特点：
				 兼容性：支持多种标准文件系统（FAT32、JFFS2、YAFFS）
				 实时文件系统：文件系统一般采用连续的方式存储文件。
				 可裁剪、可配置：选择不同的存储介质、配置可同时打开的最大文件数等。
				 支持多种存储设备：嵌入式系统需要方便的挂接不同的存储设备，具有灵活的管理能力。

1.3.3、图形用户接口（GUI）:GUI的出现极大的方便了非专业用户的使用，通过简单的窗口、菜单、按键等方式来方便的进行操作。
						   嵌入式的GUI具有以下几个方面的要求：轻型、占用资源少、高性能、高可靠性、便于移植、可配置等。
				 实现方式：
				 针对特定的图形设备输出接口，自行开放相应的功能函数。
				 购买针对特定嵌入式系统的图形中间软件包
				 采用源码开放的嵌入式GUI系统
				 使用独立软件开发商提供的嵌入式GUI产品。
				 
1.4、应用层软件：应用层软件是基于实时系统开发应用程序组成，用来实现对被控对象的控制功能。功能层是面向被控对象和用户，为了
				 方便用户操作，需要提供一个友好的人机界面。
				 对于一些复杂的系统，在系统设计的初期阶段就要对系统的需求进行分析，确定系统的功能，然后将系统的功能映射到
				 整个系统的硬件、软件和执行装置的设计过程中，称为系统的功能实现。














